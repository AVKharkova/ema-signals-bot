from telebot.handler_backends import State, StatesGroup
from telebot.types import BotCommand
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = logging.getLogger(__name__)

class SettingsState(StatesGroup):
    waiting_for_tp = State()  # –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç–∞
    waiting_for_sl = State()  # –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ —Å—Ç–æ–ø-–ª–æ—Å—Å–∞

def register_handlers(bot, config, logger):
    @bot.message_handler(commands=['help'])
    async def send_help(message):
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
        logger.debug(f"–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /help –æ—Ç chat_id: {message.chat.id}")
        if str(message.chat.id) != config.TELEGRAM_CHAT_ID:
            await bot.reply_to(message, "–ù–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø.")
            logger.warning(f"–ù–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø: chat_id {message.chat.id} != {config.TELEGRAM_CHAT_ID}")
            return
        help_text = (
            "**üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞**\n\n"
            "`/help` - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n"
            # –£–±—Ä–∞–Ω—ã –∫–æ–º–∞–Ω–¥—ã /set_tp –∏ /set_sl –∏–∑ —Å–ø–∏—Å–∫–∞
        )
        await bot.reply_to(message, help_text, parse_mode='Markdown')
        logger.info("–ö–æ–º–∞–Ω–¥–∞ /help –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞")

    @bot.message_handler(commands=['set_tp'])
    async def set_take_profit(message):
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /set_tp –æ—Ç–∫–ª—é—á–µ–Ω–∞
        logger.debug(f"–ü–æ–ø—ã—Ç–∫–∞ –≤—ã–∑–æ–≤–∞ /set_tp –æ—Ç chat_id: {message.chat.id}")
        if str(message.chat.id) != config.TELEGRAM_CHAT_ID:
            await bot.reply_to(message, "–ù–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø.")
            logger.warning(f"–ù–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø: chat_id {message.chat.id} != {config.TELEGRAM_CHAT_ID}")
            return
        await bot.reply_to(message, "–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç–∞ —á–µ—Ä–µ–∑ Telegram –æ—Ç–∫–ª—é—á–µ–Ω–æ.")
        logger.info("–ü–æ–ø—ã—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞")

    @bot.message_handler(state=SettingsState.waiting_for_tp)
    async def process_tp(message):
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞
        logger.debug(f"–ü–æ–ø—ã—Ç–∫–∞ –≤–≤–æ–¥–∞ —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç–∞: {message.text}")
        await bot.reply_to(message, "–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç–∞ —á–µ—Ä–µ–∑ Telegram –æ—Ç–∫–ª—é—á–µ–Ω–æ.")
        logger.info("–ü–æ–ø—ã—Ç–∫–∞ –≤–≤–æ–¥–∞ —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞")
        await bot.delete_state(message.from_user.id, message.chat.id)

    @bot.message_handler(commands=['set_sl'])
    async def set_stop_loss(message):
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /set_sl –æ—Ç–∫–ª—é—á–µ–Ω–∞
        logger.debug(f"–ü–æ–ø—ã—Ç–∫–∞ –≤—ã–∑–æ–≤–∞ /set_sl –æ—Ç chat_id: {message.chat.id}")
        if str(message.chat.id) != config.TELEGRAM_CHAT_ID:
            await bot.reply_to(message, "–ù–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø.")
            logger.warning(f"–ù–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø: chat_id {message.chat.id} != {config.TELEGRAM_CHAT_ID}")
            return
        await bot.reply_to(message, "–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–æ–ø-–ª–æ—Å—Å–∞ —á–µ—Ä–µ–∑ Telegram –æ—Ç–∫–ª—é—á–µ–Ω–æ.")
        logger.info("–ü–æ–ø—ã—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–æ–ø-–ª–æ—Å—Å–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞")

    @bot.message_handler(state=SettingsState.waiting_for_sl)
    async def process_sl(message):
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Å—Ç–æ–ø-–ª–æ—Å—Å–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞
        logger.debug(f"–ü–æ–ø—ã—Ç–∫–∞ –≤–≤–æ–¥–∞ —Å—Ç–æ–ø-–ª–æ—Å—Å–∞: {message.text}")
        await bot.reply_to(message, "–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–æ–ø-–ª–æ—Å—Å–∞ —á–µ—Ä–µ–∑ Telegram –æ—Ç–∫–ª—é—á–µ–Ω–æ.")
        logger.info("–ü–æ–ø—ã—Ç–∫–∞ –≤–≤–æ–¥–∞ —Å—Ç–æ–ø-–ª–æ—Å—Å–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞")
        await bot.delete_state(message.from_user.id, message.chat.id)

def setup_bot_commands(bot):
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ç–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥—ã /help
    commands = [
        BotCommand("help", "–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥")
    ]
    bot.set_my_commands(commands)
